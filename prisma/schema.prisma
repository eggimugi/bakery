// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cakes {
  id            Int             @id @default(autoincrement())
  cake_name     String          @default("")
  cake_price    Float           @default(0) @db.Double
  cake_image    String          @default("")
  best_before   DateTime        @default(now())
  cake_flavour  String          @default("")
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now()) @updatedAt
  compositions  compositions[]
  detail_orders detail_orders[]
}

model materials {
  id              Int               @id @default(autoincrement())
  material_name   String            @default("")
  material_price  Float             @default(0) @db.Double
  material_type   materialType
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now()) @updatedAt
  compositions    compositions[]
  detail_supplies detail_supplies[]
}

model compositions {
  id              Int       @id @default(autoincrement())
  cake_id         Int       @default(0)
  material_id     Int       @default(0)
  quantity        Int       @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt
  material_detail materials @relation(fields: [material_id], references: [id])
  cake_detail     cakes     @relation(fields: [cake_id], references: [id])
}

model suppliers {
  id               Int        @id @default(autoincrement())
  supplier_name    String     @default("")
  supplier_address String     @default("")
  supplier_phone   String     @default("")
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @default(now()) @updatedAt
  supplies         supplies[]
}

model supplies {
  id              Int               @id @default(autoincrement())
  supply_date     DateTime          @default(now())
  supplier_id     Int               @default(0)
  user_id         Int               @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now()) @updatedAt
  supplier_detail suppliers         @relation(fields: [supplier_id], references: [id])
  user_details    users             @relation(fields: [user_id], references: [id])
  detail_supplies detail_supplies[]
}

model detail_supplies {
  id              Int       @id @default(autoincrement())
  supply_id       Int       @default(0)
  material_id     Int       @default(0)
  material_price  Float     @default(0) @db.Double
  qty             Int       @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt
  supply_detail   supplies  @relation(fields: [supply_id], references: [id])
  material_detail materials @relation(fields: [material_id], references: [id])
}

model orders {
  id            Int             @id @default(autoincrement())
  order_date    DateTime        @default(now())
  user_id       Int             @default(0)
  status        statusType
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now()) @updatedAt
  user_detail   users           @relation(fields: [user_id], references: [id])
  detail_orders detail_orders[]
}

model users {
  id            Int        @id @default(autoincrement())
  user_name     String     @default("")
  user_email    String     @unique @default("")
  user_password String     @default("")
  user_role     roleType
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now()) @updatedAt
  orders        orders[]
  supplies      supplies[]
}

model detail_orders {
  id            Int      @id @default(autoincrement())
  order_id      Int      @default(0)
  cake_id       Int      @default(0)
  cake_price    Float    @default(0) @db.Double
  qty           Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  order_details orders   @relation(fields: [order_id], references: [id])
  cake_details  cakes    @relation(fields: [cake_id], references: [id])
}

enum materialType {
  Powder
  Liquid
  Solid
}

enum statusType {
  Process
  Delivered
}

enum roleType {
  Admin
  Cashier
}
